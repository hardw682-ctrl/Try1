import telebot
import requests
import json

# === –¢–í–û–ò –†–ï–ê–õ–¨–ù–´–ï –ö–õ–Æ–ß–ò ===
TELEGRAM_TOKEN = "7740201104:AAE-DORHQZCRo311ElNhu2ftXx69qUy_SW8"
YANDEX_API_KEY = "AQVN1u9qlbI2w8Ez_Qjq85f29_a_0leUv4wx9nAj"
YANDEX_FOLDER_ID = "ajemttl9bchmof0j7v88"

# –ü—Ä–æ–º–ø—Ç –¥–ª—è –ö–æ—Å–º–æ
SYSTEM_PROMPT = """–¢—ã ‚Äî –ö–æ—Å–º–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∏—á–Ω—ã–π —Ä–æ–±–æ—Ç-—Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –Ω–∞ –õ—É–Ω–Ω–æ–π –±–∞–∑–µ "–°–µ–ª–µ–Ω". –¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å —Ä–µ–±–µ–Ω–∫–æ–º 7-12 –ª–µ—Ç. –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –µ–≥–æ —á–µ—Ä–µ–∑ —É—á–µ–±–Ω—ã–π –∫–≤–µ—Å—Ç "–¢–∞–π–Ω–∞ –õ—É–Ω–Ω–æ–π –ë–∞–∑—ã", –¥–µ–ª–∞—è –æ–±—É—á–µ–Ω–∏–µ –≤–µ—Å–µ–ª—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º.

[–í–µ—Å—å —Ç–≤–æ–π –ø—Ä–æ–º–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏...]

–í–°–ï–ì–î–ê –∂–¥–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Ä–µ–±–µ–Ω–∫–∞ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."""

bot = telebot.TeleBot(TELEGRAM_TOKEN)

def ask_yandex_gpt(user_message):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Yandex GPT"""
    try:
        url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
        
        headers = {
            "Content-Type": "application/json",
            "Authorization": f"Api-Key {YANDEX_API_KEY}",
            "x-folder-id": YANDEX_FOLDER_ID
        }
        
        data = {
            "modelUri": f"gpt://{YANDEX_FOLDER_ID}/yandexgpt-lite",
            "completionOptions": {
                "stream": False,
                "temperature": 0.7,
                "maxTokens": 1000
            },
            "messages": [
                {
                    "role": "system", 
                    "text": SYSTEM_PROMPT
                },
                {
                    "role": "user",
                    "text": user_message
                }
            ]
        }
        
        print("üîç –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ YandexGPT...")
        response = requests.post(url, headers=headers, json=data, timeout=30)
        print(f"üì° –û—Ç–≤–µ—Ç: {response.status_code}")
        
        if response.status_code != 200:
            return f"–û—à–∏–±–∫–∞ {response.status_code}. –ü—Ä–æ–≤–µ—Ä—å –∫–ª—é—á–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
        
        result = response.json()
        return result['result']['alternatives'][0]['message']['text']
        
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {str(e)}"

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = "üöÄ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –ø–∏–ª–æ—Ç! –Ø –ö–æ—Å–º–æ, —Ä–æ–±–æ—Ç-—Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –õ—É–Ω–Ω–æ–π –±–∞–∑—ã. –£ –Ω–∞—Å –∞–≤–∞—Ä–∏—è! –ü–æ–º–æ–∂–µ—à—å –≤—Å—ë –ø–æ—á–∏–Ω–∏—Ç—å?"
    bot.reply_to(message, welcome_text)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    bot.send_chat_action(message.chat.id, 'typing')
    ai_response = ask_yandex_gpt(message.text)
    bot.reply_to(message, ai_response)

print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
bot.polling()
